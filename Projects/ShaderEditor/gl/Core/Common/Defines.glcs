/*
	Some helper macro.
*/

[HEADER]


// to mark 'out' and 'inout' argument in function call
// in function argument list use defined by GLSL qualificators: in, out, inout
#define OUT
#define INOUT

#define CountOf( _arr_ )	(_arr_).length


// for each
#define FOR( _counter_, _array_ ) \
	for (int _counter_ = 0; i < CountOf(_array_); ++i)

// reverse for each
#define FOR_rev( _counter_, _array_ ) \
	for (int _counter_ = CountOf(_array_)-1; i >= 0; --i)


// image
// example: DECL_IMAGE( image2D, rgba8, readonly, inImage )
//	_access_: readonly, writeonly, coherent, volatile, restrict
#define DECL_IMAGE( _imgType_, _format_, _access_, _name_ )	\
	layout(_format_) _access_ uniform _imgType_   _name_;


// texture
// example: DECL_TEXTURE( sampler2D, inTexture )
#define DECL_TEXTURE( _texType_, _name_ ) \
	uniform _texType_  _name_;


// shader storage buffer
// example: DECL_STORAGE( std140, struct Vertex {}, readonly, inBuffer )
//	_access_  : readonly, writeonly, coherent, volatile, restrict
//	_packType : shared, packed, std140, std430
//	_format_  : float, struct {...}
#define DECL_STORAGE( _packType_, _format_, _access_, _name_ ) \
	layout(_packType_) _access_ buffer SSBO_##_name_ { _format_  _name_[]; };

#define DECL_BUFFER( _packType_, _format_, _access_, _name_ ) \
	DECL_STORAGE( _packType_, _format_, _access_, _name_ )


// uniform buffer (readonly, fixed size, fast access)
// example: DECL_UBLOCK( std140, struct Block {}, UB )
//	_packType : shared, packed, std140
#define DECL_UBLOCK( _packType, _format_, _name_ ) \
	layout(_packType_) uniform UBO_##_name_ { _format_ _name_; }
