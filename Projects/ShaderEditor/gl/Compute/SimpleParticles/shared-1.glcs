/*
	Shared source for initialization and updating particles.
*/

[HEADER]

#include "Common.glcs"
#import  "Compute/SimpleParticles/vertex.glcs"


void InitParticle (out Particle particle, const float globalTime);

void UpdateParticle (const Particle inParticle, out Particle outParticle,
					 const float frameTime, const float globalTime, const float timeScale);


//---------------------------------------------------------
[SOURCE]


void RestartParticle (out Particle particle, const float globalTime)
{
	real	index	= real(GetGlobalIndex());
	real	size	= real(GetGlobalIndexSize());
	real	vel		= 0.1;

	particle.prevPos	= float3( 0.0 );
	particle.position	= float3( 0.0 );
	particle.size		= 8.0;
	particle.color		= packUnorm4x8(float4( HSVtoRGB(float3( index / size, 1.0, 1.0 )), 1.0 ));
	particle.velocity	= ParticleEmitter_Plane( index, size ) * vel;
	particle.param.x	= globalTime;
}


void InitParticle (out Particle particle, const float globalTime)
{
	Particle_Create( particle );
	RestartParticle( particle, globalTime );
}


void UpdateParticle (const Particle inParticle, out Particle outParticle,
					 const float frameTime, const float globalTime, const float timeScale)
{
	outParticle = inParticle;

	outParticle.position += outParticle.velocity * frameTime;

	outParticle.param.x = globalTime;
}
